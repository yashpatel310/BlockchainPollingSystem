name: Blockchain Polling System CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/
            
      - name: Install Solidity compiler
        run: sudo add-apt-repository -y ppa:ethereum/ethereum && sudo apt-get update && sudo apt-get install -y solc

      # Steps to install Ganache and MetaMask
      - name: Install Ganache
        run: |
          npm install -g ganache-cli

      - name: Check if MetaMask is installed
        run: |
          if [ -d "$HOME/.config/google-chrome/NativeMessagingHosts" ]; then
            if ls $HOME/.config/google-chrome/NativeMessagingHosts | grep -q metamask; then
              echo "MetaMask is installed."
            else
              echo "MetaMask is not installed."
            fi
          else
            echo "MetaMask is not installed."
          fi

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for testing
        run: unzip release.zip

      - name: Test Solidity
        run: solc --version

      - name: Test Ganache
        run: ganache-cli --version

      - name: Test MetaMask
        run: |
          if [ -d "$HOME/.config/google-chrome/NativeMessagingHosts" ]; then
            if ls $HOME/.config/google-chrome/NativeMessagingHosts | grep -q metamask; then
              echo "MetaMask is installed."
            else
              echo "MetaMask is not installed."
              exit 1
            fi
          else
            echo "MetaMask is not installed."
            exit 1
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from test job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
